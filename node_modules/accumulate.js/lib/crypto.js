"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashTree = exports.sha256 = void 0;
const crypto_1 = require("crypto");
function sha256(data) {
    return (0, crypto_1.createHash)("sha256").update(data).digest();
}
exports.sha256 = sha256;
function hashTree(items) {
    const hashes = items.map((i) => sha256(i));
    while (hashes.length > 1) {
        let i = 0; // hashes index
        let p = 0; // pointer
        while (i < hashes.length) {
            if (i === hashes.length - 1) {
                // Move the last "alone" leaf to the pointer
                hashes[p] = hashes[i];
                i += 1;
            }
            else {
                hashes[p] = sha256(Buffer.concat([hashes[i], hashes[i + 1]]));
                i += 2;
            }
            p += 1;
        }
        hashes.length = p;
    }
    return hashes[0];
}
exports.hashTree = hashTree;
//# sourceMappingURL=crypto.js.map