"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateKeyPage = void 0;
const encoding_1 = require("../encoding");
const tx_types_1 = require("../tx-types");
const base_payload_1 = require("./base-payload");
class CreateKeyPage extends base_payload_1.BasePayload {
    constructor(arg) {
        super();
        this._keys = arg.keys.map((key) => (key instanceof Uint8Array ? key : Buffer.from(key, "hex")));
    }
    _marshalBinary() {
        const forConcat = [];
        forConcat.push((0, encoding_1.uvarintMarshalBinary)(tx_types_1.TransactionType.CreateKeyPage, 1));
        this._keys.forEach((key) => forConcat.push((0, encoding_1.fieldMarshalBinary)(2, marshalBinaryKey(key))));
        return Buffer.concat(forConcat);
    }
}
exports.CreateKeyPage = CreateKeyPage;
function marshalBinaryKey(key) {
    return (0, encoding_1.bytesMarshalBinary)((0, encoding_1.bytesMarshalBinary)(key, 1));
}
//# sourceMappingURL=create-key-page.js.map