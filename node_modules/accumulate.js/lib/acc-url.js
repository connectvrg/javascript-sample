"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccURL = void 0;
const url_1 = require("url");
/**
 * An Accumulate URL (e.g: 'acc://my-identity/mydata')
 */
class AccURL {
    constructor(url) {
        if (url.protocol !== "acc:") {
            throw new Error(`Invalid protocol: ${url.protocol}`);
        }
        if (!url.hostname) {
            throw new Error("Missing authority");
        }
        this._url = url;
    }
    /**
     * Append path to url and return a *new* AccURL instance
     * @param path
     * @returns new AccURL instance with appended path
     */
    append(path) {
        const pathStr = path.toString();
        let url = this._url.toString();
        if (pathStr.length > 0) {
            if (pathStr.startsWith("acc://")) {
                url += pathStr.slice(5);
            }
            else if (pathStr[0] === "/") {
                url += pathStr;
            }
            else {
                url += `/${pathStr}`;
            }
        }
        return AccURL.parse(url);
    }
    /**
     * Parse, if necessary, argument into an AccURL
     */
    static toAccURL(arg) {
        return arg instanceof AccURL ? arg : AccURL.parse(arg);
    }
    /**
     * Parse a string into an AccURL
     */
    static parse(str) {
        const url = new url_1.URL(str);
        return new AccURL(url);
    }
    get authority() {
        return this._url.hostname;
    }
    get path() {
        return this._url.pathname;
    }
    get query() {
        return this._url.search;
    }
    get fragment() {
        return this._url.hash;
    }
    toString() {
        return this._url.toString();
    }
}
exports.AccURL = AccURL;
//# sourceMappingURL=acc-url.js.map