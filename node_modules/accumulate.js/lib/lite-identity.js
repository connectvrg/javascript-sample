"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiteIdentity = void 0;
const acc_url_1 = require("./acc-url");
const acme_1 = require("./acme");
const crypto_1 = require("./crypto");
const tx_signer_1 = require("./tx-signer");
/**
 * A Lite Identity
 */
class LiteIdentity extends tx_signer_1.TxSigner {
    /**
     * Construct a LiteIdentity controlled by the Signer.
     * @param signer
     */
    constructor(signer) {
        super(LiteIdentity.computeUrl(signer.publicKeyHash), signer);
    }
    /**
     * Helper method to get the ACME token account controled by the LiteIdentity.
     */
    get acmeTokenAccount() {
        return this._url.append(acme_1.ACME_TOKEN_URL);
    }
    /**
     * Compute a LiteIdentity URL based on public key hash
     */
    static computeUrl(publicKeyHash) {
        const pkHash = Buffer.from(publicKeyHash.slice(0, 20));
        const checkSum = (0, crypto_1.sha256)(pkHash.toString("hex")).slice(28);
        const authority = Buffer.concat([pkHash, checkSum]).toString("hex");
        return acc_url_1.AccURL.parse(`acc://${authority}`);
    }
}
exports.LiteIdentity = LiteIdentity;
//# sourceMappingURL=lite-identity.js.map